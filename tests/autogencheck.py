#!/bin/env python3
def runAutogenTests(myvars):
  TESTNAME="IP AUTOGEN TESTS"
  STATUS="SUCCESS"
  SUMMARY=""
  MYRC=0
  if 'ip' not in myvars['swvm']:
    return {"name":TESTNAME,"status":"FAILED.","summary":"IP address is missing in yaml.","rc":MYRC}
  if myvars["swvm"]["ip"]!="autogen":
    STATUS="NOT APPLICABLE"
    SUMMARY=""
    return {"name":TESTNAME,"status":STATUS,"summary":SUMMARY,"rc":MYRC}
  if (myvars['usremotesite'] or ("vcenter1" not in myvars["swvm"]["vcenter"].lower() and "vcenter2" not in myvars["swvm"]["vcenter"].lower())) and myvars["swvm"]["ip"]=="autogen":
    STATUS="FAILED"
    SUMMARY=SUMMARY+"You cannot auto generate IP addresses for US remote sites or datacenters."
    MYRC=1
  if "192.168." in myvars["swvm"]["foremansubnet"]:
    STATUS="FAILED"
    SUMMARY=SUMMARY+"You cannot auto-generate 192.168.*.* IP addresses."
    MYRC=1
  if "10.140." not in myvars["swvm"]["foremansubnet"] and "10.148." not in myvars["swvm"]["foremansubnet"]:
    STATUS="FAILED"
    SUMMARY=SUMMARY+"Only addresses in the 10.140 and 10.148 networks is supported at this time."
    MYRC=1
  if myvars["swvm"]["foremansubnet"].startswith("10.140.0.") or  myvars["swvm"]["foremansubnet"].startswith("10.148.0."):
    STATUS="FAILED"
    SUMMARY=SUMMARY+"10.140.0 and 10.148.0 subnets cannot be autogenerated."
    MYRC=1
  return {"name":TESTNAME,"status":STATUS,"summary":SUMMARY,"rc":MYRC}

